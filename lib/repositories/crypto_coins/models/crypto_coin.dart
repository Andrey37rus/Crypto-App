//Импортируется пакет equatable, который упрощает сравнение объектов в Dart.
import 'package:equatable/equatable.dart';

//Класс CryptoCoin наследуется от Equatable. Это позволяет классу автоматически сравнивать
// объекты на основе их свойств, что упрощает работу с ними в контексте сравнения и хэширования.

//Конструктор класса CryptoCoin принимает три обязательных параметра:
//name типа String — имя криптовалюты.
//priceInUSD типа double — цена криптовалюты в USD.
//imageURL типа String — URL изображения криптовалюты.
//Использование const перед конструктором позволяет создавать неизменяемые (immutable) объекты, 
//что может быть полезно для оптимизации и упрощения работы с состоянием

//Три свойства класса:
//name — имя криптовалюты.
//priceInUSD — цена криптовалюты в USD.
//imageURL — URL изображения криптовалюты.
//Все свойства объявлены как final, что означает, что они не могут быть изменены после создания объекта.

//Метод props переопределяется для использования с пакетом equatable.
//props возвращает список свойств, которые будут использоваться для сравнения объектов.
//В данном случае, список содержит три свойства: name, priceInUSD и imageURL.
//Это позволяет сравнивать объекты CryptoCoin на основе этих свойств, что упрощает
// работу с ними в контексте сравнения и хэширования.

class CryptoCoin extends Equatable {
  const CryptoCoin(
      {required this.name, required this.priceInUSD, required this.imageURL});

  final String name;
  final double priceInUSD;
  final String imageURL;

  @override
  List<Object> get props => [name, priceInUSD, imageURL];
}


//Класс CryptoCoin представляет собой модель данных для криптовалюты.
// Он наследуется от Equatable, что позволяет легко сравнивать объекты на основе их свойств.
// Класс имеет три неизменяемых свойства: name, priceInUSD и imageURL.
// Конструктор класса принимает эти свойства как обязательные параметры.
// Переопределение метода props позволяет использовать класс с пакетом equatable,
// что упрощает сравнение объектов.