//Эта директива указывает, что данный файл является частью файла crypto_list_bloc.dart. 
//Это позволяет разделить код на несколько файлов, но при этом сохранить их в одном логическом блоке.
part of 'crypto_list_bloc.dart';


//CryptoListEvent — это абстрактный класс, который наследуется от Equatable.
//Абстрактный класс служит базовым классом для всех событий, связанных с списком криптовалют.
//Наследование от Equatable позволяет сравнивать объекты событий на основе их свойств
abstract class CryptoListEvent extends Equatable {}

//Класс LoadCryptoList наследуется от CryptoListEvent и представляет событие загрузки списка криптовалют.

//Конструктор класса LoadCryptoList принимает опциональный параметр completer типа Completer.
//Completer используется для асинхронного управления завершением операции.

//Свойство completer типа Completer? (опциональный Completer) используется для
//отслеживания завершения асинхронной операции.

//Метод props переопределяется для использования с пакетом equatable.
//props возвращает список свойств, которые будут использоваться для сравнения объектов.
//В данном случае, список содержит одно свойство: completer.
//Это позволяет сравнивать объекты LoadCryptoList на основе этого свойства.

class LoadCryptoList extends CryptoListEvent {
  LoadCryptoList({
    this.completer,
  });

  final Completer? completer;
  
  @override
  List<Object?> get props => [completer];
}

//Этот код определяет абстрактный класс CryptoListEvent, который служит базовым классом
//для всех событий, связанных с списком криптовалют. Класс LoadCryptoList представляет 
//событие загрузки списка криптовалют и наследуется от CryptoListEvent. Он имеет опциональное 
//свойство completer, которое используется для отслеживания завершения асинхронной операции. 
//Переопределение метода props позволяет использовать класс с пакетом equatable, что упрощает 
//сравнение объектов